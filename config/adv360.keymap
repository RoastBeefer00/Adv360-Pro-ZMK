
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&sk {
    release-after-ms = <1000>;
    quick-release;
};

/ {
  macros {
        m_wh: m_wh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp W &kp H>;
        };
        m_th: m_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp T &kp H>;
        };
        m_ch: m_ch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp C &kp H>;
        };
        m_sh: m_sh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp S &kp H>;
        };
        m_ph: m_ph {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp P &kp H>;
        };
        m_gh: m_gh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp G &kp H>;
        };
        m_qu: m_qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp Q &kp U>;
        };
        m_lg: m_lg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp L &kp G>;
        };
        m_mp: m_mp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp M &kp P>;
        };
        m_wd: m_wd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp W &kp D>;
        };
        m_pg: m_pg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp P &kp G>;
        };
        m_iw: m_iw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp I &kp W>;
        };
        m_sp: m_sp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings = <&macro_tap &kp BSPC &kp S &kp P>;
        };
    };
  combos {
        compatible = "zmk,combos";
        combo_z{
            timeout-ms = <45>;
            key-positions = <16 17>;
            bindings = <&kp Z>;
        };
        combo_q {
            timeout-ms = <45>;
            key-positions = <17 18>;
            bindings = <&kp Q>;
        };
        combo_qu {
            timeout-ms = <45>;
            key-positions = <16 18>;
            bindings = <&m_qu>;
        };
    };
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    ad_m: adaptive_m {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_M";
        #binding-cells = <0>;
        defaults = <&kp M>;
        bindings = <&kp L>, <&kp L>;

        antecedents = <G P>;
        max-delay-ms = <125>;
    };

    ad_g: adaptive_g {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_G";
        #binding-cells = <0>;
        defaults = <&kp G>;
        bindings = <&m_lg>, <&m_pg>;

        antecedents = <M W>;
        max-delay-ms = <125>;
    };

    ad_ha: adaptive_ha {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_H";
        #binding-cells = <0>;
        defaults = <&kp H>;
        bindings = <&kp U>, <&kp U>;

        antecedents = <A>;
        max-delay-ms = <125>;
    };

    ad_a: adaptive_a {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_A";
        #binding-cells = <0>;
        defaults = <&kp A>;
        bindings = <&kp U>, <&kp U>;

        antecedents = <H>;
        max-delay-ms = <125>;
    };

    ad_f: adaptive_f {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_F";
        #binding-cells = <0>;
        defaults = <&kp F>;
        bindings = <&kp G>, <&kp S>;

        antecedents = <D B>;
        max-delay-ms = <125>;
    };

    ad_p: adaptive_p {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_P";
        #binding-cells = <0>;
        defaults = <&kp P>;
        bindings = <&m_sp>, <&kp S>;

        antecedents = <F>;
        max-delay-ms = <125>;
    };

    ad_y: adaptive_y {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_Y";
        #binding-cells = <0>;
        defaults = <&kp Y>;
        bindings = <&kp I>;

        antecedents = <W>;
        max-delay-ms = <125>;
    };

    ad_w: adaptive_w {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_W";
        #binding-cells = <0>;
        defaults = <&kp W>;
        bindings = <&m_iw>;

        antecedents = <Y>;
        max-delay-ms = <125>;
    };

    ad_d: adaptive_d {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_D";
        #binding-cells = <0>;
        defaults = <&kp D>;
        bindings = <&m_wd>;

        antecedents = <F>;
        max-delay-ms = <125>;
    };

    ad_fslh: adaptive_fslh {
        compatible = "zmk,behavior-antecedent-morph";
        label = "ADAPTIVE_FSLH";
        #binding-cells = <0>;
        defaults = <&kp FSLH>;
        bindings = <&kp U>;

        antecedents = <A>;
        max-delay-ms = <125>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL  &kp N1         &kp N2       &kp N3        &kp N4      &kp N5             &tog 1                                                                &mo 3  &kp N6         &kp N7      &kp N8        &kp N9       &kp N0      &kp MINUS
   &kp TAB  &kp B          &kp L        &kp D         &kp W       &kp J              &none                                                                 &none  &kp SEMICOLON  &kp F       &kp O         &kp U        &kp APOS    &kp SEMICOLON
 &lt 4 ESC  &hm LGUI N     &hm LCTRL R  &hm LSHIFT T  &hm LALT C  &kp G              &none      &kp LCTRL  &kp LGUI         &kp LGUI   &kp RALT            &none  &kp B          &hm LALT S  &hm LSHIFT A  &hm LCTRL I  &hm LGUI H  &kp BSLH
 &kp LSHFT  &kp EQUAL       &kp X        &kp M         &kp P       &kp MINUS                                &kp HOME         &kp PG_UP                             &kp FSLH       &kp Y       &kp COMMA     &kp PERIOD   &kp K       &kp RSHFT
     &mo 2  &kp GRAVE      &kp CAPS     &kp LEFT      &kp RIGHT                      &lt 2 E    &sk LSHFT  &kp END          &kp PG_DN  &key_repeat &lt 1 SPACE                   &kp DOWN    &kp UP        &kp ENTER    &kp RBKT    &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp F1  &kp F2    &kp F3     &kp F4    &kp F5    &kp F6     &tog 1                                                                &mo 3  &kp F7     &kp F8     &kp F9     &kp F10    &kp F11  &kp F12
 &none   &kp EXCL  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &none                                                                 &none  &kp CARET  &kp AMPS   &kp STAR   &none      &none    &none
 &none   &kp QMARK &kp TILDE  &kp LBRC  &kp LPAR  &kp LBKT   &none            &trans  &trans                  &trans  &trans       &none  &none      &kp COLON  &kp MINUS  &kp EQUAL  &none    &none
 &none   &none     &kp GRAVE  &kp RBRC  &kp RPAR  &kp RBKT                            &trans                  &trans                      &none      &kp PIPE   &kp PLUS   &kp UNDER  &none    &none
 &none   &none     &none      &none     &none                         &trans  &trans  &trans                  &trans  &trans  &trans                 &none      &none      &none      &none    &none
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3    &kp F4    &kp F5  &kp F6  &tog 1                                                                &mo 3  &kp F7    &kp F8     &kp F9         &kp F10    &kp F11  &kp F12
 &none   &none   &kp TAB   &none     &none   &none   &none                                                                 &none  &none     &kp PG_DN  &kp PG_UP      &none      &none    &none
 &none   &none   &kp ESC   &none     &none   &none   &none            &trans  &trans                  &trans  &trans       &none  &kp LEFT  &kp DOWN   &kp UP         &kp RIGHT  &none    &none
 &none   &none   &none     &kp DOWN  &kp UP  &none                            &trans                  &trans                      &none     &kp BSPC   &none          &kp ENTER  &none    &none
 &none   &none   &none     &none     &none                    &trans  &trans  &trans                  &trans  &trans  &trans                &none      &none          &none      &none    &none
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };


        layer_num {
            bindings = <
 &kp F1  &kp F2  &kp F3    &kp F4    &kp F5  &kp F6  &tog 1                                                         &mo 3  &kp F7       &kp F8  &kp F9         &kp F10    &kp F11  &kp F12
 &none   &none   &none  &none  &none  &none   &none                                                                 &none  &none        &kp N7  &kp N8  &kp N9  &none &none
 &none   &none   &none  &none  &none  &none   &none            &trans  &trans                  &trans  &trans       &none  &kp PERIOD   &kp N4  &kp N5  &kp N6  &none &none
 &none   &none   &none  &none  &none  &none                            &trans                  &trans                      &none        &kp N1  &kp N2  &kp N3  &none &none
 &none   &none   &none  &none  &none                   &trans  &trans  &trans                  &trans  &trans  &kp N0                   &none   &none           &none   &none    &none
            >;
        };
    };
};
